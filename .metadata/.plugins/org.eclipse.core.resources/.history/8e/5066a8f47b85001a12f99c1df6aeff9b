package com.Sapient;

public class fig_to_words {
	
	public static String[] places= {" "," thousand"," million"," billion"};
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(fig2words((long)1123));
	}
	public static String fig2words(long n)
	{
		
		String s="only";int ctr=0;
		while(n!=0)
		{
			s=" "+s;
			long k=n%1000;
			n=n/1000;
			s=fun(k)+places[ctr]+s;
			ctr++;
		}
		return s;
	}
	

	public static String digit2strones(String dgt)
	{
		switch(dgt)
		{
		case "1":
			return "one";
		case "2":
			return "two";
		case "3":
			return "three";
		case "4":
			return "four";
		case "5":
			return "five";
		case "6":
			return "six";
		case "7":
			return "seven";
		case "8":
			return "eight";
		case "9":
			return "nine";
		default:
			return "";
		}
			
				
	}
		public static String digit2strtens(String dgt)
		{
			switch(dgt)
			{
			case "10":
				return "ten";
			case "12":
				return "twelve";
			case "13":
				return "thirteen";
			case "14":
				return "fourteen";
			case "15":
				return "fiveteen";
			case "16":
				return "sixteen";
			case "17":
				return "seventeen";
			case "18":
				return "eighteen";
			case "19":
				return "nineteen";
			case "11":
				return "eleven";
			
			case "2":
				return "twenty";
			case "3":
				return "thirty";
			case "4":
				return "fourty";
			case "5":
				return "fivety";
			case "6":
				return "sixty";
			case "7":
				return "seventy";
			case "8":
				return "eighty";
			case "9":
				return "ninety";
			default:
				return "";
				
					
			}
	}

	public static String fun(long k) {
		// TODO Auto-generated method stub
		String s="";
		long l=k%100;
		if(k<10)
			return digit2strones(Long.toString(k))+" ";
		if(l<20)
		{
			if(l<9)
				s=digit2strones(Long.toString(k/100))+" "+"hundred and "+digit2strones(Long.toString(l));
			else
				s=digit2strones(Long.toString(k/100))+" "+"hundred and "+digit2strtens(Long.toString(l));
		}
		else
		{
			s=" "+digit2strones(Long.toString(k%10));k=k/10;
			s=" "+digit2strtens(Long.toString(k%10))+s;k=k/10;
			if(k!=0)
			s=digit2strones(Long.toString(k%10))+" hundred and"+s;
		}
		
		return s;
	}
}
